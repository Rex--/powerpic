@startuml library-components
skinparam componentStyle rectangle

' This is the main application.
folder "mode/<mode_name>/" {
    cloud "Mode Application" as powerpic
}


' These are the HAL components.
' They interact with the drivers to provide functionality to "Modes".
folder "lib/" {
    frame "Display" {
        file display.h
    }

    frame "Keypad" {
        file keypad.h
    }

    frame "Buttons" {
        file buttons.h
    }

    frame "Datetime" {
        file datetime.h
    }

    frame "Buzzer" {
        file buzzer.h
    }

    frame "Battery" {
        file battery.h
    }
}

component stdio.h

' Relationships between the main application and the HAL.
powerpic--> display.h
powerpic --> keypad.h
powerpic --> buttons.h
powerpic --> buzzer.h
powerpic --> battery.h
powerpic --> datetime.h
powerpic --> stdio.h
@enduml

'  library-drivers
' skinparam componentStyle rectangle

' ' These are the HAL components.
' ' They interact with the drivers to provide functionality to "Modes".
' folder "lib/" {
'     frame "Interrupt Manager" {
'         file interrupt_manager.h
'         file interrupt_manager.c
'         interrupt_manager.h <..> interrupt_manager.c
'     }

'     frame "Driver Manager" {
'         file device_manager.h
'         file device_manager.c
'         device_manager.h <..> device_manager.c
'     }
'     ' frame "Display" {
'     '     file display.h
'     '     file display.c
'     '     display.h <..> display.c
'     ' }
' }

' ' These are our low-level hardware driver components.
' ' They communicate directly with the hardware control registers.
' folder "drivers/" as devicedrivers {
'     database "UART" {
'         file uart.h
'     }

'     database "INT" {
'         file interrupts.h
'     }

'     ' database "LCD" as lcddriver {
'     '     file lcd.h
'     ' }
' }

' ' Relationships between the HAL and the device drivers.
' interrupt_manager.c --> interrupts.h
' interrupt_manager.c --> uart.h

' device_manager.c --> uart.h
' 